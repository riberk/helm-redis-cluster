{{ $masterCount := .Values.clusterFactor | int }}
{{range $stsNumber, $e := until $masterCount }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-cluster.fullname" $ }}-{{ $stsNumber }}
  labels:
    app.kubernetes.io/name: {{ include "redis-cluster.name" $ }}-{{ $stsNumber }}
    helm.sh/chart: {{ include "redis-cluster.chart" $ }}
    app.kubernetes.io/instance: "{{ $.Release.Name }}"
    app.kubernetes.io/managed-by: "{{ $.Release.Service }}"
spec:
  serviceName: {{ include "redis-cluster.fullname" $ }}-headless
  replicas: {{ add $.Values.replicationFactor 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "redis-cluster.name" $ }}
      app.kubernetes.io/instance: "{{ $.Release.Name }}"
      redis-cluster/sts-number: "{{ $stsNumber }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "redis-cluster.name" $ }}
        app.kubernetes.io/instance: "{{ $.Release.Name }}"
        redis-cluster/sts-number: "{{ $stsNumber }}"
    spec:
      containers:
      - name: {{ $.Chart.Name }}
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
        ports:
        - containerPort: 6379
          name: redis
        - containerPort: 16379
          name: gossip
        command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: true
        - name: data
          mountPath: /data
          readOnly: false
        resources:
          {{- toYaml $.Values.resources | nindent 12 }}
      volumes:
      - name: conf
        configMap:
          name: {{ include "redis-cluster.fullname" $ }}
          defaultMode: 0755
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinityTemplate }}
      {{ $affinityTemplateStr := (toYaml .) }}
      {{ $templateContext := (dict "Capabilities" $.Capabilities "Chart" $.Chart "Files" $.Files "Release" $.Release "Template" $.Template "Values" $.Values "stsNumber" $stsNumber) }}
      affinity:
        {{ tpl $affinityTemplateStr $templateContext | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "{{ $.Values.storageSize }}"
{{end}}